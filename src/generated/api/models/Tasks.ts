/* tslint:disable */
/* eslint-disable */
/**
 * CodyLab Talent 2025 API
 * API for managing the CodyLab Talent 2025 project.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Tasks
 */
export interface Tasks {
    /**
     * Unique identifier of the task.
     * @type {number}
     * @memberof Tasks
     */
    id?: number;
    /**
     * ID of the project to which the task belongs.
     * @type {number}
     * @memberof Tasks
     */
    projectId?: number;
    /**
     * Task identification code.
     * @type {string}
     * @memberof Tasks
     */
    code?: string;
    /**
     * Task name.
     * @type {string}
     * @memberof Tasks
     */
    name?: string;
    /**
     * Task description.
     * @type {string}
     * @memberof Tasks
     */
    description?: string;
    /**
     * Task start date.
     * @type {Date}
     * @memberof Tasks
     */
    startDate?: Date;
    /**
     * Task duration in days.
     * @type {number}
     * @memberof Tasks
     */
    duration?: number;
    /**
     * Task state (e.g., in progress, completed, deleted).
     * @type {string}
     * @memberof Tasks
     */
    state?: TasksStateEnum;
}


/**
 * @export
 */
export const TasksStateEnum = {
    InProgress: 'in progress',
    Completed: 'completed',
    Deleted: 'deleted'
} as const;
export type TasksStateEnum = typeof TasksStateEnum[keyof typeof TasksStateEnum];


/**
 * Check if a given object implements the Tasks interface.
 */
export function instanceOfTasks(value: object): value is Tasks {
    return true;
}

export function TasksFromJSON(json: any): Tasks {
    return TasksFromJSONTyped(json, false);
}

export function TasksFromJSONTyped(json: any, ignoreDiscriminator: boolean): Tasks {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'code': json['code'] == null ? undefined : json['code'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'duration': json['duration'] == null ? undefined : json['duration'],
        'state': json['state'] == null ? undefined : json['state'],
    };
}

export function TasksToJSON(json: any): Tasks {
    return TasksToJSONTyped(json, false);
}

export function TasksToJSONTyped(value?: Tasks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'projectId': value['projectId'],
        'code': value['code'],
        'name': value['name'],
        'description': value['description'],
        'startDate': value['startDate'] == null ? undefined : ((value['startDate']).toISOString().substring(0,10)),
        'duration': value['duration'],
        'state': value['state'],
    };
}

