/* tslint:disable */
/* eslint-disable */
/**
 * CodyLab Talent 2025 API
 * API for managing the CodyLab Talent 2025 project.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Pagination } from './Pagination';
import {
    PaginationFromJSON,
    PaginationFromJSONTyped,
    PaginationToJSON,
    PaginationToJSONTyped,
} from './Pagination';
import type { Slots } from './Slots';
import {
    SlotsFromJSON,
    SlotsFromJSONTyped,
    SlotsToJSON,
    SlotsToJSONTyped,
} from './Slots';

/**
 * 
 * @export
 * @interface SlotsPage
 */
export interface SlotsPage {
    /**
     * 
     * @type {Pagination}
     * @memberof SlotsPage
     */
    pagination?: Pagination;
    /**
     * 
     * @type {Array<Slots>}
     * @memberof SlotsPage
     */
    items?: Array<Slots>;
}

/**
 * Check if a given object implements the SlotsPage interface.
 */
export function instanceOfSlotsPage(value: object): value is SlotsPage {
    return true;
}

export function SlotsPageFromJSON(json: any): SlotsPage {
    return SlotsPageFromJSONTyped(json, false);
}

export function SlotsPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): SlotsPage {
    if (json == null) {
        return json;
    }
    return {
        
        'pagination': json['pagination'] == null ? undefined : PaginationFromJSON(json['pagination']),
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(SlotsFromJSON)),
    };
}

export function SlotsPageToJSON(json: any): SlotsPage {
    return SlotsPageToJSONTyped(json, false);
}

export function SlotsPageToJSONTyped(value?: SlotsPage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'pagination': PaginationToJSON(value['pagination']),
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(SlotsToJSON)),
    };
}

