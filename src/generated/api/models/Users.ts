/* tslint:disable */
/* eslint-disable */
/**
 * CodyLab Talent 2025 API
 * API for managing the CodyLab Talent 2025 project.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Tasks } from './Tasks';
import {
    TasksFromJSON,
    TasksFromJSONTyped,
    TasksToJSON,
    TasksToJSONTyped,
} from './Tasks';
import type { Projects } from './Projects';
import {
    ProjectsFromJSON,
    ProjectsFromJSONTyped,
    ProjectsToJSON,
    ProjectsToJSONTyped,
} from './Projects';

/**
 * 
 * @export
 * @interface Users
 */
export interface Users {
    /**
     * Unique identifier of the user.
     * @type {number}
     * @memberof Users
     */
    id?: number;
    /**
     * User's first name.
     * @type {string}
     * @memberof Users
     */
    firstName?: string;
    /**
     * User's last name.
     * @type {string}
     * @memberof Users
     */
    lastName?: string;
    /**
     * Username for access.
     * @type {string}
     * @memberof Users
     */
    username?: string;
    /**
     * User's email address.
     * @type {string}
     * @memberof Users
     */
    email?: string;
    /**
     * User profile (e.g., administrator, standard user).
     * @type {string}
     * @memberof Users
     */
    profile?: string;
    /**
     * 
     * @type {number}
     * @memberof Users
     */
    dailyHours?: number;
    /**
     * 
     * @type {Array<Projects>}
     * @memberof Users
     */
    managedProjects?: Array<Projects>;
    /**
     * 
     * @type {Array<Tasks>}
     * @memberof Users
     */
    tasks?: Array<Tasks>;
}

/**
 * Check if a given object implements the Users interface.
 */
export function instanceOfUsers(value: object): value is Users {
    return true;
}

export function UsersFromJSON(json: any): Users {
    return UsersFromJSONTyped(json, false);
}

export function UsersFromJSONTyped(json: any, ignoreDiscriminator: boolean): Users {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'username': json['username'] == null ? undefined : json['username'],
        'email': json['email'] == null ? undefined : json['email'],
        'profile': json['profile'] == null ? undefined : json['profile'],
        'dailyHours': json['dailyHours'] == null ? undefined : json['dailyHours'],
        'managedProjects': json['managedProjects'] == null ? undefined : ((json['managedProjects'] as Array<any>).map(ProjectsFromJSON)),
        'tasks': json['tasks'] == null ? undefined : ((json['tasks'] as Array<any>).map(TasksFromJSON)),
    };
}

export function UsersToJSON(json: any): Users {
    return UsersToJSONTyped(json, false);
}

export function UsersToJSONTyped(value?: Users | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'username': value['username'],
        'email': value['email'],
        'profile': value['profile'],
        'dailyHours': value['dailyHours'],
        'managedProjects': value['managedProjects'] == null ? undefined : ((value['managedProjects'] as Array<any>).map(ProjectsToJSON)),
        'tasks': value['tasks'] == null ? undefined : ((value['tasks'] as Array<any>).map(TasksToJSON)),
    };
}

